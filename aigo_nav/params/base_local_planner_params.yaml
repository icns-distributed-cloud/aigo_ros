TrajectoryPlannerROS:
  max_vel_x: 0.4
  min_vel_x: 0.1 # Allowing velocities too low will will stop the obstacle avoidance because low velocities won't actually be high enough to move the robot
  max_vel_theta: 1.0
  min_vel_theta: -1.0
  min_in_place_vel_theta: 0.4

  acc_lim_theta: 1.0
  acc_lim_x: 1.0
  acc_lim_y: 0.0

  holonomic_robot: false

  # New Stuff

  escape_vel: -0.2

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.1  # in rads
  xy_goal_tolerance: 0.2  # in meters
  latch_xy_goal_tolerance: false

  # Forward Simulation Parameters
    # these parameters change how the planner simulates trajectories at each update and therefore changes the optimal trajectory that is chosen
    # These should be adjusted based on your computer performance
  sim_time: 2.0   # setting time of each simulation that it must evaluate. Higher will create longer curves but too low can limit performance (<2)
  sim_granularity: 0.02 # the step size to take between points on a trajectory, or how frequent should the points on this trajectory should be examined
  angular_sim_granularity: 0.02
  vx_samples: 10  # how many samples of x velocity are taken for simulated trajectories
  vtheta_samples: 30 # how many samples of theta velocity are taken for simulated trajectories
  controller_frequency: 1.0  # how often the planning algorithm is performed (hz)

  # Trajectory scoring parameters
  meter_scoring: true # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. Cells are assumed by default (false).
  occdist_scale:  0.1 #The weighting for how much the controller should attempt to avoid obstacles. default 0.01
  pdist_scale: 0.5  #     The weighting for how much the controller should stay close to the path it was given . default 0.6
  gdist_scale: 1.0 #     The weighting for how much the controller should attempt to reach its local goal, also controls speed  default 0.8

  heading_lookahead: 0.325  #How far to look ahead in meters when scoring different in-place-rotation trajectories
  heading_scoring: false  #Whether to score based on the robot's heading to the path or its distance from the path. default false
  heading_scoring_timestep: 0.8   #How far to look ahead in time in seconds along the simulated trajectory when using heading scoring (double, default: 0.8)
  dwa: true #Whether to use the Dynamic Window Approach (DWA)_ or whether to use Trajectory Rollout
  simple_attractor: false
  publish_cost_grid_pc: true  

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.25 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
  escape_reset_dist: 0.1
  escape_reset_theta: 0.1
